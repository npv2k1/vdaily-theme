name: Release Theme

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build production assets
        run: npm run build
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create clean theme archive
        run: |
          # Create temporary directory for clean theme
          THEME_NAME="vdaily-theme"
          ARCHIVE_DIR="${THEME_NAME}"
          mkdir -p "${ARCHIVE_DIR}"
          
          # Copy only theme files (exclude development and git files)
          rsync -av --progress \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.gitignore' \
            --exclude='.dockerignore' \
            --exclude='.env*' \
            --exclude='.vscode' \
            --exclude='.specify' \
            --exclude='node_modules' \
            --exclude='specs' \
            --exclude='src' \
            --exclude='package.json' \
            --exclude='package-lock.json' \
            --exclude='webpack.config.js' \
            --exclude='docker-compose*.yml*' \
            --exclude='docker-helper.sh' \
            --exclude='DOCKER.md' \
            --exclude='TESTING-DOCKER.md' \
            --exclude='SCREENSHOT.md' \
            --exclude='build-theme.sh' \
            --exclude='build' \
            --exclude='*.map' \
            ./ "${ARCHIVE_DIR}/"
          
          # Create zip archive
          zip -r "${THEME_NAME}-${{ steps.get_version.outputs.VERSION }}.zip" "${ARCHIVE_DIR}"
          
          echo "Archive created: ${THEME_NAME}-${{ steps.get_version.outputs.VERSION }}.zip"
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: vdaily-theme-${{ steps.get_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
